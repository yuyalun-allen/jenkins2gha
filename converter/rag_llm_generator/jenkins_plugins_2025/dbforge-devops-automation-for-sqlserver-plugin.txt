## Summary

Devart dbForge DevOps Automation for SQL Server is designed for
establishing the Continuous Integration process in Jenkins when
developing SQL Server databases.

## Features

dbForge DevOps Automation allows establishing the flowing stages of
Continuous Integration within a Jenkins project:

-   **Build** - deploys a database on LocalDB or on a specified SQL
    Server and generate NuGet package from a Source control repository.
-   **Execute** - executes the SQL scripts.
-   **Test** - runs tSQLt and generates test data.
-   **Sync** - deploys a NuGet package and synchronizes it with a
    working DB.
-   **Publish** - places a NuGet Package to a NuGet feed for further
    deployment.

## Requirements

#### dbForge Tools

[dbForge SQL Tools](https://www.devart.com/dbforge/sql/database-devops/download.html) or [dbForge Studio for SQL Server ](https://www.devart.com/dbforge/sql/studio/download.html)
Enterprise edition are required to successfully use dbForge DevOps Automation for SQL Server plugin.
All the tools that are used by dbForge DevOps Automation for SQL Server have a trial period.

#### Jenkins

Jenkins [version
2.150](https://jenkins.io/changelog#v2.150) or newer is
required.

## Help Us to Make it Better

If you have any ideas of how to improve dbForge DevOps Automation for
SQL Server, submit a pull request with your code to us. Upon approval,
we will implement the suggested changes.

You can also email us at
[support@devart.com](https://wiki.jenkins.io/display/JENKINS/mailto:support@devart.com)